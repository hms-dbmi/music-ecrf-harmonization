position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list_sm <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
umls_subset %>% filter(grepl('CD4//CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4////CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4/CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4.*CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(CODE == '54218-3')
umls_subset %>% filter(grepl('CD4.*//.*CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4.*///.*CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4.*////.*CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4.*/.*CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD4.*/[^100].*CD8', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD419', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD19', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('CD19', STR))
umls_subset %>% filter(grepl('CD19+', STR))
umls_subset %>% filter(grepl('CD+19', STR))
umls_subset %>% filter(grepl('CD\+19', STR))
umls_subset %>% filter(grepl('CD\\+19', STR))
umls_subset %>% filter(grepl('CD19\\+', STR))
umls_subset %>% filter(grepl('CD19\\+:', STR))
umls_subset %>% filter(grepl('Cells.CD19', STR))
umls_subset %>% filter(grepl('Cells\\.CD19', STR))
umls_subset %>% filter(grepl('^Cells\\.CD19', STR))
umls_subset %>% filter(grepl('^Cells\\.CD19\\+', STR))
umls_subset %>% filter(grepl('^Cells\\.CD19:', STR))
umls_subset %>% filter(grepl('CD19:', STR))
umls_subset %>% filter(grepl('[^/100.*]CD19:', STR))
umls_subset %>% filter(grepl('[^/100]CD19:', STR))
umls_subset %>% filter(grepl('[^/100 Cells]CD19:', STR))
umls_subset %>% filter(grepl('[^/100 Cells\.]CD19:', STR))
umls_subset %>% filter(grepl('[^/100 Cells\\.]CD19:', STR))
umls_subset %>% filter(grepl('[^/100]CD19:', STR))
umls_subset %>% filter(grepl('CD19', STR))
umls_subset %>% filter(grepl('CD19\\+', STR))
umls_subset %>% filter(grepl('CD19\\+[^CD]', STR))
umls_subset %>% filter(grepl('CD19\\+[^CD|/100]', STR))
umls_subset %>% filter(grepl('CD19:', STR))
umls_subset %>% filter(grepl('[[:alpha:]]*\\.CD19:', STR))
umls_subset %>% filter(grepl('CD19:', STR))
umls_subset %>% filter(grepl('(Cells\\.|Blasts\\.)CD19:', STR))
umls_subset %>% filter(grepl('^(Cells\\.|Blasts\\.)CD19:', STR))
umls_subset <- read.delim("../local_ref/loinc_clinicalAttributes.dsv")
#load the keywords (manually checked previously)
lab_keywords <- read.delim("../local_ref/lab_keywords_sm.tsv" )   #loading sm
lab_keywords <- lab_keywords %>%
dplyr::filter( Position %in% c('beginning', 'anywhere'))
cutOff <- 10
#extract the loincs that contain the keywords
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list_sm <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
umls_subset %>% filter(grepl('fibrinogen', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('[^cryo]fibrinogen', STR, ignore.case = TRUE))
umls_subset %>% filter(grepl('[^cryo|\\+]fibrinogen', STR, ignore.case = TRUE))
View(output)
write.csv(output, '../local_ref/eCRF_to_LOINC_forReview.csv')
library(dplyr)
library(lubridate)
umls_subset <- read.delim("../local_ref/loinc_clinicalAttributes.dsv")
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
lab_keywords <- read.delim("../local_ref/lab_keywords.tsv" )
lab_keywords <- read.delim("../data/lab_keywords.tsv" )
lab_keywords <- lab_keywords %>%
dplyr::filter( Position %in% c('beginning', 'anywhere'))
cutOff <- 10
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], "\t with keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], "\t with keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], "\t with keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique( output )
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
View(output)
output <- output %>%
mutate(webpage = paste0("https://loinc.org/",CODE,"/"),
clinical_review = '')
View(output)
?rename
colnames(output)
output <- output %>%
mutate(webpage = paste0("https://loinc.org/",CODE,"/"),
clinical_review = '') %>%
rename(`LOINC CODE` = CODE)
colnames(output)
output <- output %>%
mutate(webpage = paste0("https://loinc.org/",CODE,"/"),
clinical_review = '') %>%
rename(`LOINC CODE` = CODE,
`LOINC DESCRIPTION` = STR,
`eCRF TERM DESCRIPTION` = Section.Header,
`CLINICIAN REVIEW: DO THE DESCRIPTIONS MATCH?` = clinical_review,
`LOINC WEBPAGE - EXTENDED DESCRIPTION` = webpage)
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique(output)
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
output <- output %>%
mutate(webpage = paste0("https://loinc.org/",CODE,"/"),
clinical_review = '') %>%
rename(`LOINC CODE` = CODE,
`LOINC DESCRIPTION` = STR,
`eCRF TERM DESCRIPTION` = Section.Header,
`CLINICIAN REVIEW: DO THE DESCRIPTIONS MATCH?` = clinical_review,
`LOINC WEBPAGE - EXTENDED DESCRIPTION` = webpage)
View(output)
write.csv(output, '../data/eCRF_to_LOINC_forReview.csv', row.names = FALSE)
mappingToBch <- bch_loinc_map %>%
dplyr::filter( LOINC_LAB_CODE %in% output$CODE)
bch_loinc_map <- read.csv("../data/BCH_Lab_Loinc_cd_Map_data.csv")
mappingToBch <- bch_loinc_map %>%
dplyr::filter( LOINC_LAB_CODE %in% output$CODE)
library(dplyr)
library(lubridate)
umls_subset <- read.delim("../local_ref/loinc_clinicalAttributes.dsv")
lab_keywords <- read.delim("../data/lab_keywords.tsv" )
lab_keywords <- lab_keywords %>%
dplyr::filter( Position %in% c('beginning', 'anywhere'))
cutOff <- 10
for( i in 1:nrow(lab_keywords)){
position <- lab_keywords$Position[i]
if( position == "anywhere"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( lab_keywords$Keyword[i], STR))
}else if(position == "beginning"){
generalQ<- umls_subset %>%
dplyr::filter( grepl( paste0("^", lab_keywords$Keyword[i]), STR))
}
narrowQ <- generalQ %>%
dplyr::filter( grepl( paste(c("*Ser/Plas:Qn", "*Pt:Bld:Qn"), collapse = "|"), STR))
if(i==1){
if( nrow(narrowQ) == 0 ){
output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
output <- narrowQ
}else if( nrow( generalQ) > 0 ){
output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
output$Section.Header <- lab_keywords$Section.Header[i]
}else{
if( nrow(narrowQ) == 0 ){
int_output <- generalQ
}else if( nrow( generalQ ) > cutOff ){
int_output <- narrowQ
}else if( nrow( generalQ) > 0 ){
int_output <- generalQ
}else{
print( paste0("No entry found for keyword: ", lab_keywords$Keyword[i]))
}
print( paste0( nrow( int_output), " LOINC terms found for eCRF Term: ", lab_keywords$Section.Header[i], " with keyword: ", lab_keywords$Keyword[i]))
int_output$Section.Header <- lab_keywords$Section.Header[i]
output <- rbind( output, int_output)
}
}
output <- unique(output)
ranked_list <- output %>% group_by(Section.Header) %>% summarise(n = n_distinct(CODE)) %>% arrange(desc(n)) # testing
out <- output %>%
mutate(webpage = paste0("https://loinc.org/",CODE,"/"),
clinical_review = '') %>%
rename(`LOINC CODE` = CODE,
`LOINC DESCRIPTION` = STR,
`eCRF TERM DESCRIPTION` = Section.Header,
`CLINICIAN REVIEW: DO THE DESCRIPTIONS MATCH?` = clinical_review,
`LOINC WEBPAGE - EXTENDED DESCRIPTION` = webpage)
write.csv(out, '../data/eCRF_to_LOINC_forReview.csv', row.names = FALSE)
bch_loinc_map <- read.csv("../data/BCH_Lab_Loinc_cd_Map_data.csv")
mappingToBch <- bch_loinc_map %>%
dplyr::filter(LOINC_LAB_CODE %in% output$CODE)
View(mappingToBch)
